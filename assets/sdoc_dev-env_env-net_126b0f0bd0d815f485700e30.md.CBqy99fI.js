import{_ as a,c as i,o as n,b0 as e}from"./chunks/framework.Ccoaxoqw.js";const l="/imx6ull-docs/assets/image-20240828232549228.YC9s7ykv.png",p="/imx6ull-docs/assets/image-20240917093627155-1761233648360-2.B6BQ-nVa.png",b=JSON.parse('{"title":"LV005-tftp环境搭建","description":null,"frontmatter":{"title":"LV005-tftp环境搭建","date":"2025-10-23T23:32:40.000Z","icon":"famicons:logo-markdown","permalink":"/sdoc/dev-env/env-net/126b0f0bd0d815f485700e30","index":true,"tags":null,"categories":null,"copyright":false,"keywords":null,"cover":null,"comments":null,"mathjax":null,"top":null,"description":null,"tdoc":{"detailDate":"2025-10-23T23:32:40.351Z","fulluuid":"485700e3023c4d3eb5758755968380bf","useduuid":4.857e+35}},"headers":[],"relativePath":"sdoc/dev-env/env-net/126b0f0bd0d815f485700e30.md","filePath":"sdoc/01-开发环境/15-网络环境/LV005-tftp环境搭建.md","lastUpdated":1760873307000}'),t={name:"sdoc/dev-env/env-net/126b0f0bd0d815f485700e30.md"};function h(r,s,d,k,c,u){return n(),i("div",null,[...s[0]||(s[0]=[e(`<h1 id="lv005-tftp环境搭建" tabindex="-1">LV005-tftp环境搭建 <a class="header-anchor" href="#lv005-tftp环境搭建" aria-label="Permalink to &quot;LV005-tftp环境搭建&quot;">​</a></h1><h2 id="一、开发环境" tabindex="-1">一、开发环境 <a class="header-anchor" href="#一、开发环境" aria-label="Permalink to &quot;一、开发环境&quot;">​</a></h2><h3 id="_1-windows" tabindex="-1">1. Windows <a class="header-anchor" href="#_1-windows" aria-label="Permalink to &quot;1. Windows&quot;">​</a></h3><div class="language-markdown vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">版本	       Windows 11 专业版</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">版本号	      23H2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">安装日期	  2024/9/16</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">操作系统版本  22631.4169</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">体验	       Windows Feature Experience Pack 1000.22700.1034.0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>其中 Windows 通过连接路由器的 WiFi 上网，</p><h3 id="_2-ubuntu" tabindex="-1">2. Ubuntu <a class="header-anchor" href="#_2-ubuntu" aria-label="Permalink to &quot;2. Ubuntu&quot;">​</a></h3><p>Ubuntu 安装在 Windows 中的 VMware 中。</p><ul><li>VMware</li></ul><div class="language-markdown vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">产品：VMware® Workstation 17 Pro</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">版本：17.6.0 build-24238078</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>Ubuntu</li></ul><div class="language-markdown vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;"># uname -a</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Linux sumu-vm 5.15.0-139-generic #149~20.04.1-Ubuntu SMP Wed Apr 16 08:29:56 UTC 2025 x86_64 x86_64 x86_64 GNU/Linux</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;"># lsb_release -a</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">No LSB modules are available.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Distributor ID:	Ubuntu</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Description:	Ubuntu 20.04.6 LTS</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Release:	20.04</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Codename:	focal</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_3-开发板" tabindex="-1">3. 开发板 <a class="header-anchor" href="#_3-开发板" aria-label="Permalink to &quot;3. 开发板&quot;">​</a></h3><p>正点原子 I.MX6ULL-ALPHA 开发板，系统使用的是出厂系统。</p><ul><li>U-Boot</li></ul><div class="language-markdown vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">U-Boot 2016.03-gee88051 (Nov 05 2021 - 17:59:02 +0800)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CPU:   Freescale i.MX6ULL rev1.1 792 MHz (running at 396 MHz)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CPU:   Industrial temperature grade (-40C to 105C) at 29C</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Reset cause: POR</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Board: I.MX6U ALPHA|MINI</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">I2C:   ready</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DRAM:  512 MiB</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MMC:   FSL_SDHC: 0, FSL_SDHC: 1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li>Linux 内核</li></ul><div class="language-markdown vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;"># uname -a</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Linux ATK-IMX6U 4.1.15-g06f53e4 #1 SMP PREEMPT Sat Nov 27 18:39:27 CST 2021 armv7l armv7l armv7l GNU/Linux</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;"># cat /etc/issue</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Freescale i.MX Release Distro 4.1.15-2.1.0 \\n \\l</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="二、-tftp-环境搭建" tabindex="-1">二、 TFTP 环境搭建 <a class="header-anchor" href="#二、-tftp-环境搭建" aria-label="Permalink to &quot;二、 TFTP 环境搭建&quot;">​</a></h2><p>其实这一部分在之前已经写过笔记了（01/嵌入式开发01HQ课程体系/LV09-uboot与linux/LV09-01-环境搭建-01-TFTP与NFS），这里就当复习回顾吧。</p><h3 id="_1-tftp-简介" tabindex="-1">1.  TFTP 简介 <a class="header-anchor" href="#_1-tftp-简介" aria-label="Permalink to &quot;1.  TFTP 简介&quot;">​</a></h3><p>TFTP （ Trivial File Transfer Protocol ，简单文件传输协议）是 TCP/IP 协议族中的一个用来在客户机与服务器之间进行简单文件传输的协议，提供不复杂、开销不大的文件传输服务，它的端口号为 69 。我们可以使用 TFTP 来加载内核镜像、设备树和其他较小的文件到开发板 DDR 上，从而实现网络挂载。</p><p>TFTP 文件在服务器中，客户端将文件下载到本地，然后本地和服务器端都会有相同的这样一个文件。</p><h3 id="_2-tftp-环境搭建" tabindex="-1">2.  TFTP 环境搭建 <a class="header-anchor" href="#_2-tftp-环境搭建" aria-label="Permalink to &quot;2.  TFTP 环境搭建&quot;">​</a></h3><h4 id="_2-1-查看是否已安装" tabindex="-1">2.1 查看是否已安装 <a class="header-anchor" href="#_2-1-查看是否已安装" aria-label="Permalink to &quot;2.1 查看是否已安装&quot;">​</a></h4><p>在终端执行以下命令检查 tftp 相关服务是否安装：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dpkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tftpd-hpa</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_2-2-安装和配置-xinetd" tabindex="-1">2.2 安装和配置 xinetd <a class="header-anchor" href="#_2-2-安装和配置-xinetd" aria-label="Permalink to &quot;2.2 安装和配置 xinetd&quot;">​</a></h4><h5 id="_2-2-1-安装xinetd" tabindex="-1">2.2.1 安装xinetd <a class="header-anchor" href="#_2-2-1-安装xinetd" aria-label="Permalink to &quot;2.2.1 安装xinetd&quot;">​</a></h5><p>在终端执行以下命令安装 xinetd ：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xinetd</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h5 id="_2-2-2-配置xinetd-conf" tabindex="-1">2.2.2 配置xinetd.conf <a class="header-anchor" href="#_2-2-2-配置xinetd-conf" aria-label="Permalink to &quot;2.2.2 配置xinetd.conf&quot;">​</a></h5><p>这里我们直接用下边的命令打开 xinetd.conf 配置文件(不检查是否存在了，直接打开，没有的话就是空文件，配置完后边直接保存就可以了)：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/xinetd.conf</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>打开后将文件修改为以下内容：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Simple configuration file for xinetd</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Some defaults, and include /etc/xinetd.d/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defaults</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Please note that you need a log_type line to be able to use log_on_success</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># and log_on_failure. The default is the following :</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># log_type = SYSLOG daemon info</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">includedir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/xinetd.d</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>最后直接保存即可。</p><h4 id="_2-3-tftp-服务器目录创建" tabindex="-1">2.3  TFTP 服务器目录创建 <a class="header-anchor" href="#_2-3-tftp-服务器目录创建" aria-label="Permalink to &quot;2.3  TFTP 服务器目录创建&quot;">​</a></h4><p>接下来创建一个目录用作 TFTP 服务器的站点，在终端执行以下命令：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/sumu/3tftp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 777</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/sumu/3tftp/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="_2-4-安装tftp相关服务" tabindex="-1">2.4 安装TFTP相关服务 <a class="header-anchor" href="#_2-4-安装tftp相关服务" aria-label="Permalink to &quot;2.4 安装TFTP相关服务&quot;">​</a></h4><h5 id="_2-4-1-安装-tftp-hpa-和-tftpd-hpa" tabindex="-1">2.4.1 安装 tftp-hpa 和 tftpd-hpa <a class="header-anchor" href="#_2-4-1-安装-tftp-hpa-和-tftpd-hpa" aria-label="Permalink to &quot;2.4.1 安装  tftp-hpa  和  tftpd-hpa&quot;">​</a></h5><p>在终端执行以下命令：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tftp-hpa</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tftpd-hpa</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h5 id="_2-4-2-ftpd-hpa-配置文件修改" tabindex="-1">2.4.2  ftpd-hpa 配置文件修改 <a class="header-anchor" href="#_2-4-2-ftpd-hpa-配置文件修改" aria-label="Permalink to &quot;2.4.2  ftpd-hpa 配置文件修改&quot;">​</a></h5><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/default/tftpd-hpa</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 打开配置文件</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>修改为以下内容：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># /etc/default/tftpd-hpa</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TFTP_USERNAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tftp&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TFTP_DIRECTORY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/home/sumu/3tftp&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TFTP_ADDRESS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;:69&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># TFTP_OPTIONS=&quot;--secure&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TFTP_OPTIONS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-c -s -l&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>只是修改了 TFTP_DIRECTORY 的值，后边改为我们自己创建的 TFTP 服务目录，后边客户端要下载的文件需要放到该目录下。</p><h5 id="_2-4-3-tftp-配置文件修改" tabindex="-1">2.4.3  tftp 配置文件修改 <a class="header-anchor" href="#_2-4-3-tftp-配置文件修改" aria-label="Permalink to &quot;2.4.3  tftp 配置文件修改&quot;">​</a></h5><p>在终端执行以下命令打开相关配置文件，若没有 xinetd.d 这个目录，我们可以自己手动创建）：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/xinetd.d/tftp</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>打开后，一般应该是新文件，我们添加如下内容：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tftp</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        socket_type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dgram</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        wait</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        disable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> no</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        protocol</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> udp</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/sbin/in.tftpd</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        server_args</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/sumu/3tftp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        #log_on_success += PID HOST DURATION </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        #log_on_failure += HOST </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        per_source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 11</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        cps</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        flags</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =IPv4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>【注意】 server_args = -s 后面要添加自己的 tftp 工作目录。</p><h4 id="_2-5-重启相关服务" tabindex="-1">2.5 重启相关服务 <a class="header-anchor" href="#_2-5-重启相关服务" aria-label="Permalink to &quot;2.5 重启相关服务&quot;">​</a></h4><p>在终端执行以下命令：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tftpd-hpa</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 重启 tftpd-hpa</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xinetd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 重启 xinetd</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>【注意】看到有个资料上说，每次重新打开 ubuntu 若要使用 tftp 都需要重启，这里先记下，后边出现问题的话可以重启再试一下。</p><h2 id="三、tftp功能测试" tabindex="-1">三、TFTP功能测试 <a class="header-anchor" href="#三、tftp功能测试" aria-label="Permalink to &quot;三、TFTP功能测试&quot;">​</a></h2><h3 id="_1-ubuntu本地测试" tabindex="-1">1. ubuntu本地测试 <a class="header-anchor" href="#_1-ubuntu本地测试" aria-label="Permalink to &quot;1. ubuntu本地测试&quot;">​</a></h3><ul><li>在服务器目录创建一个新文件</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/sumu/3tftp</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 进入到服务器工作目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test.c</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 创建一个新文件</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>文件内容如下：</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;stdio.h&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> argc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> char*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> argv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">[]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>本机登录tftp服务器</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              # 回到家目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tftp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> localhost</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 使用 tftp 命令登录本机</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>当我们本地登录成功后，命令提示符会变成如下形式：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tftp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>下载服务器中文件</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tftp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test.c</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>退出 tftp</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tftp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">quit</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>退出 tftp 服务后，我们就会回到刚所在的目录里，我们下载的文件也将会被保存到这里</p><ul><li>查看是否下载成功</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>若显示有 test.c文件，那么表示我们的 TFTP 服务安装配置成功。</p><img src="`+l+`" alt="image-20240828232549228" style="zoom:73%;"><h3 id="_2-linux开发板测试" tabindex="-1">2. linux开发板测试 <a class="header-anchor" href="#_2-linux开发板测试" aria-label="Permalink to &quot;2. linux开发板测试&quot;">​</a></h3><p>开发板中是正点原子出厂系统，肯定是有tftp功能的，但是其实我们经常会再uboot中使用tftp下载linux内核镜像，然后启动内核，一般来说官方的uboot和linux都应该是支持的。</p><h4 id="_2-1-开发板ip配置" tabindex="-1">2.1 开发板ip配置 <a class="header-anchor" href="#_2-1-开发板ip配置" aria-label="Permalink to &quot;2.1 开发板ip配置&quot;">​</a></h4><p>按照上一节《<a href="/imx6ull-docs/sdoc/dev-env/env-net/126b0f095e543d43e27f40f1.html">01-开发环境/15-网络环境/LV001-网络环境搭建.md</a>》配置好uboot、开发板、windows的IP，使其三者可以互相ping通。三者的IP如下：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">开发板</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> IP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ：</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.10.103</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">虚拟机</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> IP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ：</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.10.101</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">电脑网口的</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> IP：</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.10.100</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_2-2-传输文件到开发板" tabindex="-1">2.2 传输文件到开发板 <a class="header-anchor" href="#_2-2-传输文件到开发板" aria-label="Permalink to &quot;2.2 传输文件到开发板&quot;">​</a></h4><p>我们搭建 TFTP 环境就是为了能将文件从 Ubuntu 传输到我们的 linux 开发板，当我们配置好 Linux 开发板和 ubuntu 的网络环境，两者之间互相可以 ping 通的时候，我们可以这样来实现文件的传输，在开发板的终端(我一般使用MobaXterm )中执行：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tftp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">file_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Ubuntu_I</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这样便会将 Ubuntu 中 TFTP 服务器目录下的文件下载到开发板的当前目录下。例如，</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tftp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test.c</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.10.101</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>若是能下载成功，那么就会在当前目录生成下载的文件：</p><img src="`+p+'" alt="image-20240917093627155" style="zoom:50%;">',89)])])}const g=a(t,[["render",h]]);export{b as __pageData,g as default};
