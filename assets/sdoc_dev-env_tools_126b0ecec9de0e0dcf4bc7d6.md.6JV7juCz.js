import{_ as a,c as o,o as t,b0 as s}from"./chunks/framework.Ccoaxoqw.js";const i="/imx6ull-docs/assets/image-20220512193504300.8OnPdDHl.png",l="/imx6ull-docs/assets/image-20220512194156736.GRuglW1k.png",r="/imx6ull-docs/assets/image-20220512194304604.nspjPfLH.png",c="/imx6ull-docs/assets/image-20220512194728869.CL2BpCyV.png",n="/imx6ull-docs/assets/image-20220512195035356.1vw8SQZJ.png",m="/imx6ull-docs/assets/image-20220512195646205.iOVUYUWI.png",d="/imx6ull-docs/assets/image-20230712220838048.DWGnydZh.png",p="/imx6ull-docs/assets/image-20230712220924822.ClKAQe2F.png",h="/imx6ull-docs/assets/image-20230712221430786.dslaR08a.png",u="/imx6ull-docs/assets/image-20230712221641146.CMTdpu2-.png",_="/imx6ull-docs/assets/image-20230712221723778.DBDjywJc.png",b="/imx6ull-docs/assets/image-20230712223207252.rWuKvZOb.png",g="/imx6ull-docs/assets/image-20230712223438194.Bp0ulvWL.png",x="/imx6ull-docs/assets/image-20230712223622397.BJHL9jel.png",f="/imx6ull-docs/assets/image-20230712223711410.DsD9oAyI.png",q="/imx6ull-docs/assets/image-20230712224246992.DNkP_bDf.png",k="/imx6ull-docs/assets/image-20230712224051985.jzANipwK.png",P="/imx6ull-docs/assets/image-20230712224545872.BW0QIhDf.png",z=JSON.parse('{"title":"LV001-串口终端","description":null,"frontmatter":{"title":"LV001-串口终端","date":"2025-10-19T23:37:58.000Z","icon":"famicons:logo-markdown","permalink":"/sdoc/dev-env/tools/126b0ecec9de0e0dcf4bc7d6","index":true,"tags":null,"categories":null,"copyright":false,"keywords":null,"cover":null,"comments":null,"mathjax":null,"top":null,"description":null,"tdoc":{"detailDate":"2025-10-19T23:37:58.224Z","fulluuid":"dcf4bc7d65b54f9983b9aa95cb2e7262","useduuid":"dcf4bc7d6"}},"headers":[],"relativePath":"sdoc/dev-env/tools/126b0ecec9de0e0dcf4bc7d6.md","filePath":"sdoc/01-开发环境/10-相关工具/LV001-串口终端.md","lastUpdated":1760873307000}'),y={name:"sdoc/dev-env/tools/126b0ecec9de0e0dcf4bc7d6.md"};function X(w,e,C,S,M,v){return t(),o("div",null,[...e[0]||(e[0]=[s('<h1 id="lv001-串口终端" tabindex="-1">LV001-串口终端 <a class="header-anchor" href="#lv001-串口终端" aria-label="Permalink to &quot;LV001-串口终端&quot;">​</a></h1><h2 id="一、ch340驱动" tabindex="-1">一、CH340驱动 <a class="header-anchor" href="#一、ch340驱动" aria-label="Permalink to &quot;一、CH340驱动&quot;">​</a></h2><p>我们一般在<code>Windwos</code>下通过串口来调试程序，或者使用串口作为终端， <code>I.MX6U-ALPHA</code>开发板使用 <code>CH340</code>芯片实现了 <code>USB</code>转串口功能，所以需要进行驱动的安装。</p><h3 id="_1-连接pc与开发板" tabindex="-1">1. 连接PC与开发板 <a class="header-anchor" href="#_1-连接pc与开发板" aria-label="Permalink to &quot;1. 连接PC与开发板&quot;">​</a></h3><p>先通过<code>USB</code>线将开发板的串口和电脑连接起来起来，连接方式如下图：</p><img src="'+i+'" alt="image-20220512193504300" style="zoom:50%;"><h3 id="_2-安装驱动" tabindex="-1">2. 安装驱动 <a class="header-anchor" href="#_2-安装驱动" aria-label="Permalink to &quot;2. 安装驱动&quot;">​</a></h3><p>可以在这里下载<code>CH340</code>的驱动程序（<a href="https://www.wch.cn/downloads/CH341SER_EXE.html" target="_blank" rel="noreferrer">CH341SER.EXE - 南京沁恒微电子股份有限公司 (wch.cn)</a>）：</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://www.wch.cn/downloads/CH341SER_EXE.html</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>下载完毕后，双击安装即可，安装成功如下图所示：</p><img src="'+l+'" alt="image-20220512194156736" style="zoom:33%;"><p>此时我们打开电脑的设备管理器，会发现已经识别到了串口：</p><img src="'+r+'" alt="image-20220512194304604" style="zoom:33%;"><h2 id="二、串口终端软件" tabindex="-1">二、串口终端软件 <a class="header-anchor" href="#二、串口终端软件" aria-label="Permalink to &quot;二、串口终端软件&quot;">​</a></h2><p>可以使用串口的终端软件有很多比如 Xshell， SecureCRT， MobaXterm，甚至 Ubuntu 的终端都是可以连接开发板上的串口的。我主要是用过两种，就是SecureCRT和MobaXterm。后边主要是用MobaXterm了。注意：这里的演示，需要开发板中已经烧写了u-boot和linux。</p><h3 id="_1-securecrt" tabindex="-1">1. SecureCRT <a class="header-anchor" href="#_1-securecrt" aria-label="Permalink to &quot;1. SecureCRT&quot;">​</a></h3><h4 id="_1-1-安装securecrt" tabindex="-1">1.1 安装SecureCRT <a class="header-anchor" href="#_1-1-安装securecrt" aria-label="Permalink to &quot;1.1 安装SecureCRT&quot;">​</a></h4><p>以前实习的时候就是用的这个，熟悉一些，就还是用这个啦。我们可以自己去网上找一个安装包就可以了，也有一些绿色中文便携的，懂的都懂哈。软件界面如下图（我换过主题啦）：</p><img src="'+c+'" alt="image-20220512194728869" style="zoom:37%;"><h4 id="_1-2-配置securecrt" tabindex="-1">1.2 配置SecureCRT <a class="header-anchor" href="#_1-2-配置securecrt" aria-label="Permalink to &quot;1.2 配置SecureCRT&quot;">​</a></h4><p>接下来就可以进行配置啦，这里选择串口，然后波特率的话，我用的这个板子是要设置为<code>115200</code>否则出来的全是乱码。</p><img src="'+n+'" alt="image-20220512195035356" style="zoom:40%;"><p>连接成功后如下图所示：</p><img src="'+m+'" alt="image-20220512195646205" style="zoom:40%;"><p>接下来我们就可以在这里边使用<code>Linux</code>相关命令啦。</p><h3 id="_2-mobaxterm" tabindex="-1">2. MobaXterm <a class="header-anchor" href="#_2-mobaxterm" aria-label="Permalink to &quot;2. MobaXterm&quot;">​</a></h3><h4 id="_2-1-mobaxterm-简介" tabindex="-1">2.1 MobaXterm 简介 <a class="header-anchor" href="#_2-1-mobaxterm-简介" aria-label="Permalink to &quot;2.1 MobaXterm 简介&quot;">​</a></h4><p>MobaXterm又名MobaXVT，是一款增强型远程连接工具，类似xshell。它有以下特点：</p><p>（1）MobaXterm具有宏的功能，能录下我们的操作，保存下来后，遇到相同的任务，直接运行宏，就能自动重复之前的命令，有效提高效率。</p><p>（2）MobaXterm自带文本编辑器，双击文件传输窗口里的文本文件，能直接用自带的文本编辑器打开服务器中的文件。</p><p>（3）如果在Windows下运行程序的话，我们需要打开cmd命令行窗口，而打开的窗口多了话，任务栏不免拥挤，切换非常不便。现在我们通过MobaXterm也能打开Windows下的cmd程序，并且能设置打开时的默认路径。</p><p>（4）MobaXterm自带Linux环境，不需要装双系统，也不需要装虚拟机，打开MobaXterm的本地终端就能直接进入Linux环境，此时我们的Windows系统俨然成为了Linux服务器。</p><p>（5）自动保存日志功能，经过配置，MobaXterm可以将串口显示的所有内容直接写入文件，写入文件的每一行数据也可以增加时间。</p><p>MobaXterm 分免费开源版和收费专业版。官网提供 MobaXterm 的免费开源版 “Home Edition” 下载, 免费开源版又分便捷版(解压即用)和安装版(需要一步步安装)。MobaXterm 免费版(persional)和专业版(Professional)除了 sessions 数、SSH tunnels 数和其他一些定制化配置外限制外，免费版在终端底部还多了一个 “UNREGISTERED VERSION” 提示。</p><h4 id="_2-2-软件安装" tabindex="-1">2.2 软件安装 <a class="header-anchor" href="#_2-2-软件安装" aria-label="Permalink to &quot;2.2 软件安装&quot;">​</a></h4><p>这个没什么说的，可以在这里下载<a href="https://mobaxterm.mobatek.net/download.html" target="_blank" rel="noreferrer">MobaXterm-Download</a>，我们下载免费版本就可以了：</p><img src="'+d+'" alt="image-20230712220838048" style="zoom:33%;"><p>我下载的是MobaXterm(Professional Edition v23.0 Build 5042 (license)）版本然后一路默认安装就可以了，安装完毕后，打开界面如下：</p><img src="'+p+'" alt="image-20230712220924822" style="zoom:25%;"><h4 id="_2-3-创建会话" tabindex="-1">2.3 创建会话 <a class="header-anchor" href="#_2-3-创建会话" aria-label="Permalink to &quot;2.3 创建会话&quot;">​</a></h4><p>接下来就是创建串口会话，MobaXterm 按如下配置：【 Session（会话）】→【选择 Serial（串口）类型】→【选择开发板设备对应的 com 口】→【选择波特率为 115200（开发板默认波特率为 115200）】→【高级设置】→【设置流控为 None】→【点击确认】。</p><img src="'+h+'" alt="image-20230712221430786" style="zoom:25%;"><h4 id="_2-4-启动本地终端" tabindex="-1">2.4 启动本地终端 <a class="header-anchor" href="#_2-4-启动本地终端" aria-label="Permalink to &quot;2.4 启动本地终端&quot;">​</a></h4><p>很多时候我们要打开windows下的命令行，但是win下的命令跟linux是有很多不同的，MobaXterm 为我们提供了一个本地终端，就像一个linux服务器一样，我们直接点击主界面的【start local terminal】</p><img src="'+u+'" alt="image-20230712221641146" style="zoom:50%;"><p>然后便会打开一个本地终端，我们可以在里边使用大部分的linux命令。</p><img src="'+_+'" alt="image-20230712221723778" style="zoom:45%;"><p>【注意】老版本的很可能没有这个功能，有需要的话，最好使用比较新的版本。</p><h4 id="_2-5-自动保存日志" tabindex="-1">2.5 自动保存日志 <a class="header-anchor" href="#_2-5-自动保存日志" aria-label="Permalink to &quot;2.5 自动保存日志&quot;">​</a></h4><h5 id="_2-5-1-全局配置" tabindex="-1">2.5.1 全局配置 <a class="header-anchor" href="#_2-5-1-全局配置" aria-label="Permalink to &quot;2.5.1 全局配置&quot;">​</a></h5><p>点击主界面菜单栏的【Settings】→【Configuration】</p><img src="'+b+'" alt="image-20230712223207252" style="zoom:38%;"><p>然后会打开配置界面，按照下图的配置即可。</p><img src="'+g+'" alt="image-20230712223438194" style="zoom:42%;"><h5 id="_2-5-2-本地终端效果" tabindex="-1">2.5.2 本地终端效果 <a class="header-anchor" href="#_2-5-2-本地终端效果" aria-label="Permalink to &quot;2.5.2 本地终端效果&quot;">​</a></h5><p>本地终端是直接受全局配置影响，可以直接生效的。我们重启终端，开一个本地的终端，然后随便输入几个命令，再看一下刚才设置的日志保存目录，会发现生成了一个文件：</p><img src="'+x+'" alt="image-20230712223622397" style="zoom:50%;"><p>我们打开文件看一下，就会发现里边是我们刚才敲得命令及显示的信息，并且都带时间戳：</p><img src="'+f+'" alt="image-20230712223711410" style="zoom:33%;"><h5 id="_2-5-3-串口终端" tabindex="-1">2.5.3 串口终端 <a class="header-anchor" href="#_2-5-3-串口终端" aria-label="Permalink to &quot;2.5.3 串口终端&quot;">​</a></h5><p>但是会发现我们的串口终端的日志是没有保存下来的，所以还需要单独对串口终端配置一下，【选中串口终端】→【右键】→【Edit session】</p><img src="'+q+'" alt="image-20230712224246992" style="zoom:45%;"><p>然后便会弹出配置界面，然后按照图中步骤开启日志打印，最终重启串口终端即可：</p><img src="'+k+'" alt="image-20230712224051985" style="zoom:40%;"><p>最终保存的效果如下：</p><img src="'+P+'" alt="image-20230712224545872" style="zoom:47%;">',66)])])}const T=a(y,[["render",X]]);export{z as __pageData,T as default};
